// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/beldeveloper/app-lego/internal/app/http"
	"github.com/beldeveloper/app-lego/internal/app/postgres"
	"github.com/beldeveloper/app-lego/internal/app/svc"
)

// Injectors from wire.go:

func initializeContainer() (container, error) {
	appReposDir := reposDir()
	vcsSvc := svc.NewGit(appReposDir)
	hookClient := newHookConn()
	hookSvc := svc.NewHook(hookClient)
	pool := newPostgresConn()
	deploymentRepo := postgres.NewDeployment(pool)
	branchRepo := postgres.NewBranch(pool)
	repositoryRepo := postgres.NewRepository(pool)
	deploymentSvc := svc.NewDeployment(hookSvc, deploymentRepo, branchRepo, repositoryRepo)
	branchSvc := svc.NewBranch(vcsSvc, deploymentSvc, hookSvc, branchRepo, repositoryRepo)
	repositorySvc := svc.NewRepository(vcsSvc, branchSvc, repositoryRepo)
	watcher := newWatcher(repositorySvc, branchSvc, deploymentSvc)
	apiAccessKey := newAccessKey()
	handler := http.NewHandler(repositorySvc, branchSvc, deploymentSvc, apiAccessKey)
	router := http.NewRouter(handler)
	mainContainer := newContainer(watcher, router)
	return mainContainer, nil
}
